declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.int_specifier = constant [4 x i8] c"%d\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
@err_zero = constant [23 x i8] c"Error division by zero\00"
@r44 = constant [8 x i8] c"default\00"
define void @main() {
%r0 = alloca i32, i32 200
%r1 = add i32 0, 0
%r2 = getelementptr i32, i32* %r0, i32 4
store i32 %r1, i32* %r2
br label %label7_next  ; end of statement
br label %label7_next  ; end of statement
  label7_next:
%r3 = add i32 0, 0
%r4 = getelementptr i32, i32* %r0, i32 8
store i32 %r3, i32* %r4
br label %label13_next  ; end of statement
br label %label13_next  ; end of statement
  label13_next:
br label %label15_while_head  ; start/end of while
  label15_while_head:
%r6 = getelementptr i32, i32* %r0, i32 4
%r5 = load i32, i32* %r6
%r7 = icmp slt i32 %r5, 20
br i1 %r7, label %label20_while_body, label %label146_next
  label20_while_body:
%r9 = getelementptr i32, i32* %r0, i32 8
%r8 = load i32, i32* %r9
br label %label121_switch_init  ; start of switch
br label %label25_case  ; start of case
  label25_case:
%r11 = getelementptr i32, i32* %r0, i32 4
%r10 = load i32, i32* %r11
%r12 = add i32 %r10, 1
%r13 = add i32 %r12, 0
%r14 = getelementptr i32, i32* %r0, i32 4
store i32 %r13, i32* %r14
br label %label34_next  ; end of statement
br label %label34_next  ; end of statement
  label34_next:
%r16 = getelementptr i32, i32* %r0, i32 4
%r15 = load i32, i32* %r16
%r17 = icmp sge i32 %r15, 5
br i1 %r17, label %label39_if, label %label50_next
  label39_if:
%r19 = getelementptr i32, i32* %r0, i32 8
%r18 = load i32, i32* %r19
%r20 = add i32 %r18, 1
%r21 = add i32 %r20, 0
%r22 = getelementptr i32, i32* %r0, i32 8
store i32 %r21, i32* %r22
br label %label50_next  ; end of statement
br label %label50_next  ; end of if
br label %label50_next  ; end of statement
br label %label50_next  ; end of statement
  label50_next:
br label %label130_next  ; break
br label %label54_next  ; end of statement
br label %label54_next  ; end of statement
  label54_next:
br label %label56_case  ; start of case
  label56_case:
%r23 = add i32 0, 0
%r24 = getelementptr i32, i32* %r0, i32 12
store i32 %r23, i32* %r24
br label %label62_next  ; end of statement
br label %label62_next  ; end of statement
  label62_next:
br label %label64_while_head  ; start/end of while
  label64_while_head:
%r26 = getelementptr i32, i32* %r0, i32 12
%r25 = load i32, i32* %r26
%r27 = icmp slt i32 %r25, 5
br i1 %r27, label %label69_while_body, label %label86_next
  label69_while_body:
%r29 = getelementptr i32, i32* %r0, i32 4
%r28 = load i32, i32* %r29
%r31 = getelementptr i32, i32* %r0, i32 12
%r30 = load i32, i32* %r31
%r32 = add i32 %r28, %r30
%r33 = add i32 %r32, 0
%r34 = getelementptr i32, i32* %r0, i32 4
store i32 %r33, i32* %r34
br label %label80_next  ; end of statement
br label %label80_next  ; end of statement
  label80_next:
br label %label86_next  ; break
br label %label64_while_head  ; end of statement
br label %label64_while_head  ; start/end of while
br label %label86_next  ; end of statement
br label %label86_next  ; end of statement
  label86_next:
%r36 = getelementptr i32, i32* %r0, i32 4
%r35 = load i32, i32* %r36
%r37 = icmp sge i32 %r35, 10
br i1 %r37, label %label91_if, label %label102_next
  label91_if:
%r39 = getelementptr i32, i32* %r0, i32 8
%r38 = load i32, i32* %r39
%r40 = add i32 %r38, 1
%r41 = add i32 %r40, 0
%r42 = getelementptr i32, i32* %r0, i32 8
store i32 %r41, i32* %r42
br label %label102_next  ; end of statement
br label %label102_next  ; end of if
br label %label102_next  ; end of statement
br label %label102_next  ; end of statement
  label102_next:
br label %label130_next  ; break
br label %label106_next  ; end of statement
br label %label106_next  ; end of statement
  label106_next:
br label %label108_default  ; start of default
  label108_default:
%r43 = getelementptr [8 x i8], [8 x i8]* @r44, i32 0, i32 0
call void @print(i8* %r43)
br label %label113_next  ; end of statement
br label %label113_next  ; end of statement
  label113_next:
%r47 = getelementptr i32, i32* %r0, i32 4
%r46 = load i32, i32* %r47
%r48 = add i32 %r46, 3
%r49 = add i32 %r48, 0
%r50 = getelementptr i32, i32* %r0, i32 4
store i32 %r49, i32* %r50
br label %label130_next  ; end of statement
  label121_switch_init:
%r51 = icmp eq i32 %r8, 1
br i1 %r51, label %label56_case, label %label124_switch_comparison
  label124_switch_comparison:
%r52 = icmp eq i32 %r8, 0
br i1 %r52, label %label25_case, label %label108_default
br label %label108_default
br label %label130_next  ; end of statement
br label %label130_next  ; end of statement
  label130_next:
%r54 = getelementptr i32, i32* %r0, i32 4
%r53 = load i32, i32* %r54
%r55 = add i32 %r53, 1
%r56 = add i32 %r55, 0
%r57 = getelementptr i32, i32* %r0, i32 4
store i32 %r56, i32* %r57
br label %label139_next  ; end of statement
br label %label139_next  ; end of statement
  label139_next:
%r59 = getelementptr i32, i32* %r0, i32 4
%r58 = load i32, i32* %r59
call void @printi(i32 %r58)
br label %label15_while_head  ; end of statement
br label %label15_while_head  ; start/end of while
br label %label146_next  ; end of statement
  label146_next:
ret void
}
