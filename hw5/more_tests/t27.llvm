declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.int_specifier = constant [4 x i8] c"%d\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
@err_zero = constant [23 x i8] c"Error division by zero\00"
@r7 = constant [2 x i8] c"0\00"
@r36 = constant [7 x i8] c"case 0\00"
@r39 = constant [7 x i8] c"case 1\00"
@r47 = constant [7 x i8] c"case 6\00"
@r50 = constant [8 x i8] c"default\00"
define i32 @printb(i32) {
%r0 = alloca i32, i32 200
%r1 = add i32 0, %0
%r2 = trunc i32 %r1 to i1
br i1 %r2, label %label5_if, label %label10_next
  label5_if:
call void @printi(i32 1)
br label %label10_next  ; end of if
br label %label10_next  ; end of statement
br label %label10_next  ; end of statement
  label10_next:
%r4 = add i32 0, %0
%r5 = trunc i32 %r4 to i1
br i1 %r5, label %label20_next, label %label14_if
  label14_if:
%r6 = getelementptr [2 x i8], [2 x i8]* @r7, i32 0, i32 0
call void @print(i8* %r6)
br label %label20_next  ; end of if
br label %label20_next  ; end of statement
br label %label20_next  ; end of statement
  label20_next:
%r9 = add i32 0, %0
%r10 = trunc i32 %r9 to i1
br i1 %r10, label %label24_convert_true, label %label26_convert_false
  label24_convert_true:
br label %label28_convert_final
  label26_convert_false:
br label %label28_convert_final
  label28_convert_final:
%r11 = phi i32 [1, %label24_convert_true], [0, %label26_convert_false]
ret i32 %r11
br label %label32_next  ; end of statement
  label32_next:
ret i32 0
}
define void @main() {
%r12 = alloca i32, i32 200
%r13 = add i32 0, 0
%r14 = getelementptr i32, i32* %r12, i32 4
store i32 %r13, i32* %r14
br label %label42_next  ; end of statement
br label %label42_next  ; end of statement
  label42_next:
%r15 = add i32 0, 0
%r16 = getelementptr i32, i32* %r12, i32 8
store i32 %r15, i32* %r16
br label %label48_next  ; end of statement
br label %label48_next  ; end of statement
  label48_next:
br label %label50_while_head  ; start/end of while
  label50_while_head:
%r18 = getelementptr i32, i32* %r12, i32 4
%r17 = load i32, i32* %r18
%r19 = icmp slt i32 %r17, 8
br i1 %r19, label %label55_while_body, label %label166_next
  label55_while_body:
%r21 = getelementptr i32, i32* %r12, i32 8
%r20 = load i32, i32* %r21
%r22 = icmp eq i32 %r20, 4
br i1 %r22, label %label60_if, label %label82_else
  label60_if:
%r24 = getelementptr i32, i32* %r12, i32 4
%r23 = load i32, i32* %r24
%r25 = add i32 %r23, 1
%r26 = add i32 %r25, 0
%r27 = getelementptr i32, i32* %r12, i32 4
store i32 %r26, i32* %r27
br label %label69_next  ; end of statement
br label %label69_next  ; end of statement
  label69_next:
%r29 = getelementptr i32, i32* %r12, i32 8
%r28 = load i32, i32* %r29
%r30 = add i32 %r28, 1
%r31 = add i32 %r30, 0
%r32 = getelementptr i32, i32* %r12, i32 8
store i32 %r31, i32* %r32
br label %label78_next  ; end of statement
br label %label78_next  ; end of statement
  label78_next:
br label %label50_while_head
br label %label147_next  ; end of statement
br label %label147_next  ; end of if
  label82_else:
%r34 = getelementptr i32, i32* %r12, i32 4
%r33 = load i32, i32* %r34
br label %label134_switch_init  ; start of switch
br label %label87_case  ; start of case
  label87_case:
%r35 = getelementptr [7 x i8], [7 x i8]* @r36, i32 0, i32 0
call void @print(i8* %r35)
br label %label92_next  ; end of statement
br label %label92_next  ; end of statement
  label92_next:
br label %label147_next  ; break
br label %label96_next  ; end of statement
br label %label96_next  ; end of statement
  label96_next:
br label %label98_case  ; start of case
  label98_case:
%r38 = getelementptr [7 x i8], [7 x i8]* @r39, i32 0, i32 0
call void @print(i8* %r38)
br label %label103_next  ; end of statement
br label %label103_next  ; end of statement
  label103_next:
%r42 = getelementptr i32, i32* %r12, i32 8
%r41 = load i32, i32* %r42
%r43 = add i32 %r41, 1
%r44 = add i32 %r43, 0
%r45 = getelementptr i32, i32* %r12, i32 8
store i32 %r44, i32* %r45
br label %label112_next  ; end of statement
br label %label112_next  ; end of statement
  label112_next:
br label %label50_while_head
br label %label116_next  ; end of statement
br label %label116_next  ; end of statement
  label116_next:
br label %label118_case  ; start of case
  label118_case:
%r46 = getelementptr [7 x i8], [7 x i8]* @r47, i32 0, i32 0
call void @print(i8* %r46)
br label %label123_next  ; end of statement
br label %label123_next  ; end of statement
  label123_next:
br label %label125_default  ; start of default
  label125_default:
%r49 = getelementptr [8 x i8], [8 x i8]* @r50, i32 0, i32 0
call void @print(i8* %r49)
br label %label130_next  ; end of statement
br label %label130_next  ; end of statement
  label130_next:
br label %label147_next  ; break
br label %label147_next  ; end of statement
br label %label147_next  ; end of statement
  label134_switch_init:
%r52 = icmp eq i32 %r33, 6
br i1 %r52, label %label118_case, label %label137_switch_comparison
  label137_switch_comparison:
%r53 = icmp eq i32 %r33, 1
br i1 %r53, label %label98_case, label %label140_switch_comparison
  label140_switch_comparison:
%r54 = icmp eq i32 %r33, 0
br i1 %r54, label %label87_case, label %label125_default
br label %label125_default
br label %label147_next  ; end of statement
br label %label147_next  ; end of statement
br label %label147_next  ; end of statement
  label147_next:
%r56 = getelementptr i32, i32* %r12, i32 8
%r55 = load i32, i32* %r56
%r58 = getelementptr i32, i32* %r12, i32 4
%r57 = load i32, i32* %r58
%r59 = add i32 %r55, %r57
call void @printi(i32 %r59)
br label %label156_next  ; end of statement
br label %label156_next  ; end of statement
  label156_next:
%r62 = getelementptr i32, i32* %r12, i32 4
%r61 = load i32, i32* %r62
%r63 = add i32 %r61, 1
%r64 = add i32 %r63, 0
%r65 = getelementptr i32, i32* %r12, i32 4
store i32 %r64, i32* %r65
br label %label50_while_head  ; end of statement
br label %label50_while_head  ; start/end of while
br label %label166_next  ; end of statement
  label166_next:
ret void
}
